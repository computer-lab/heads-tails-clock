{"version":3,"sources":["components/Credits/index.js","components/Lights/index.js","components/LightGlobe/Light/index.js","lib/index.js","components/LightGlobe/index.js","index.js"],"names":["Credits","react_default","a","createElement","className","rel","href","target","Lights","intensity","position","castShadow","Light","_ref","mesh","name","useRef","time","_useState","useState","_useState2","Object","slicedToArray","isHovered","setIsHovered","_useState3","_useState4","isActive","setIsActive","isActiveRef","timeMod","useMemo","random","color","useEffect","current","useFrame","lookAt","rotation","y","Math","sin","onHover","useCallback","e","value","stopPropagation","onClick","v","ref","onPointerOver","onPointerOut","attach","args","transparent","opacity","sphericalCoordsToCartesian","radius","inclination","azimuth","x","cos","z","LightGlobe","group","lights","cities","map","lat","lng","coords","PI","abs","latlngToSphericalCoords","_coords","inc","azm","key","concat","App","Fragment","web","style","background","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a503ead5.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default () => {\n  return (\n    <div className=\"credits\">\n      <a\n        rel=\"noopener noreferrer\"\n        href=\"https://bortolamigallery.com/artist/madeline-hollander/bio/\"\n        target=\"_blank\"\n      >\n        Heads / Tails Clock\n      </a>\n      <br />\n      <a\n        rel=\"noopener noreferrer\"\n        href=\"https://bortolamigallery.com/artist/madeline-hollander/bio/\"\n        target=\"_blank\"\n      >\n        Madeline Hollander\n      </a>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <group>\n      <ambientLight intensity={0.4} />\n      <directionalLight\n        intensity={0.9}\n        position={[-1, -1, 0]}\n        castShadow\n      />\n    </group>\n  );\n};\n","import React, {\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n  useCallback\n} from \"react\";\nimport { random } from \"lodash\";\nimport { useFrame } from \"react-three-fiber\";\n\nexport function Light ({ position, name }) {\n  const mesh = useRef();\n  const time = useRef(0);\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  const isActiveRef = useRef(isActive);\n\n\n  // random time mod factor\n  const timeMod = useMemo(() => random(0.1, 4, true), []);\n\n  // color\n  const color = isHovered ? 0xefefef : (isActive ? 0xffffff : 0xeeeeee);\n\n  //useEffect of the activeState\n  useEffect(() => {\n    isActiveRef.current = isActive;\n  }, [isActive]);\n\n  // raf loop\n  useFrame(() => {\n    mesh.current.lookAt(0, 0, 0)\n    mesh.current.rotation.y += 0 * timeMod;\n    if (isActiveRef.current) {\n      time.current += 0.03;\n      mesh.current.position.y = position[1] + Math.sin(time.current) * 0.05;\n    }\n  });\n\n  // Events\n  const onHover = useCallback(\n    (e, value) => {\n      e.stopPropagation();\n      setIsHovered(value);\n    },\n    [setIsHovered]\n  );\n\n  const onClick = useCallback(\n    e => {\n      e.stopPropagation();\n      setIsActive(v => !v);\n    },\n    [setIsActive]\n  );\n\n  return (\n    <mesh\n      ref={mesh}\n      position={position}\n      onClick={e => onClick(e)}\n      onPointerOver={e => onHover(e, true)}\n      onPointerOut={e => onHover(e, false)}\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[0.12, 0.07, 0.05]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color={color}\n        transparent\n        opacity={0.8}\n      />\n    </mesh>\n  );\n};\n","\n\nexport function sphericalCoordsToCartesian (radius, inclination, azimuth) {\n  /*\n   * Inclination is in the range [0, pi], from straight up (the zenith)\n   * Azimuth is in the range [0, 2pi], from the x axis\n   * See: https://en.wikipedia.org/wiki/Spherical_coordinate_system#Cartesian_coordinates\n   */\n  const x = radius * Math.sin(inclination) * Math.cos(azimuth);\n  const z = radius * Math.sin(inclination) * Math.sin(azimuth);\n  const y = radius * Math.cos(inclination);\n  return [-x, y, z];\n}\n\nexport function latlngToSphericalCoords (lat, lng) {\n  const inclination = Math.PI * (lat > 0 ? 90 - lat : 90 + Math.abs(lat)) / 180;\n  const azimuth = 2 * Math.PI * (lng >= 0 ? lng : 360 - Math.abs(lng)) / 360; \n  return [inclination, azimuth];\n}\n\n\n","import React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\n\nimport { Light } from \"./Light\";\nimport { sphericalCoordsToCartesian, latlngToSphericalCoords } from \"../../lib\";\nimport cities from \"../../lib/cities.json\";\n\nexport function LightGlobe () {\n  const group = useRef();\n\n  useFrame(() => {\n    group.current.rotation.y += 0.0005;\n    // use redux here instead\n  });\n\n  const RADIUS = 2;\n  const lights = cities.map(({ lat, lng, name }) => {\n    const coords = latlngToSphericalCoords(lat, lng);\n    const [inc, azm] = coords\n    return (\n      <Light\n        key={`${inc}-${azm}`}\n        position={sphericalCoordsToCartesian(RADIUS, inc, azm)}\n        name={name}\n      />\n    )\n\n  })\n\n  return (\n    <group ref={group}>\n      {lights}\n    </group>\n  )\n  ;\n};\n","import \"./styles.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Credits from \"./components/Credits\";\nimport { Canvas } from \"react-three-fiber\";\nimport Lights from \"./components/Lights\";\nimport { LightGlobe } from \"./components/LightGlobe\";\n\nfunction App() {\n  return (\n    <>\n      <Credits/>\n      <Canvas style={{ background: '#171010' }}>\n        <Lights />\n        <LightGlobe />\n      </Canvas>\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}